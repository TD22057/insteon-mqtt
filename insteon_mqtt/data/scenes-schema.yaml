## DO NOT EDIT THIS FILE
##
## This schema is used to validate the scenes file before loading.
## The validation enforces certain rules for each setting including:
##    - Type - Is the setting specified in the expected form
##    - Presence - Is the setting defined when it should be
##    - Content - Is the content of the setting something allowed
## Plus other unique tests are performed as well.  This helps catch errors
## that may otherwise be hard to diagnose once the program is loaded.
## The schema is interpreted by Cerberus, which you can read more about
## here: https://docs.python-cerberus.org/en/stable/index.html
##
## Yaml anchors & and aliases * are used extensively here to avoid duplicate
## coding.  Please read about them here
## https://ktomk.github.io/writing/yaml-anchor-alias-and-merge-key.html
##
## Merge keys were not used because they are already deprecated and not
## not supported in yaml 1.2.
##
## I made an error when initially designing the scenes.yaml file.  Apparently
## not having a key at the root is very uncommon, even though it works.
## However, it doesn't work for Cerberus.  So before passing the document to
## validate we insert a root key of `scenes` and set it's value to the
## document contents

scenes:
  nullable: True
  type: list
  schema:
    type: dict
    allow_unknown: False
    schema:
      responders: &scene_device
        type: list
        required: True
        schema:
          oneof:
            # Opt1 This is a device name or Insteon address only
            - type: ['string', 'integer']
              meta:
                type_error: Device address or name must be a string
            # Opt2 This is a device with group
            - type: dict
              maxlength: 1
              keysrules:
                type: ['string', 'integer']
                meta:
                  type_error: Device address or name must be a string
              valuesrules:
                type: integer
                meta:
                  type_error: Group must be an integer
              meta:
                type_error: "Entry was not in 'device: group' format"
                maxlength_error: "Entry was not in 'device: group' format"
            # Opt3 This is a device with additional device attributes
            - type: dict
              keysrules:
                type: ['string', 'integer']
                meta:
                  type_error: >-
                    Device address, name, and device attributes must be strings
              valuesrules:
                type: dict
                schema: {}
                allow_unknown:
                  type: number
                  meta:
                    type_error: Device attribute value must be a number
              meta:
                type_error: >-
                  Entry was not in 'device: {dev_attr: value}' format
          meta:
            oneof_error: |
              This entry does not match a valid entry format.
              Insteon Addresses can be represented as:
               aa.bb.cc, aabbcc, or aa:bb:cc
              Scene Device entries can use one of the following forms:
               - aa.bb.cc
               - Device Name
               - [aa.bb.cc, Device Name]: Group (integer)
               - aa.bb.cc:
                   device_attribute: Value (number)

      controllers: *scene_device
      name:
        required: False
        type: string
        meta:
          type_error: Scene names must be strings
